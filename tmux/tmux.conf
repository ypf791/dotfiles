###
# status bar
######
set -g status-attr default

set -g message-bg colour235 #base02
set -g message-fg colour178 #yellow

setw -g window-status-format " #I #W "
set -g status-bg colour235 #base02
set -g status-fg colour244 #gray
set -g status-attr default

setw -g window-status-current-format " #I #W#F"
setw -g window-status-current-attr none
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour178 #yellow

set -g status-interval 1
#set -g status-justify centre # center align window list
set -g status-left '#[fg=colour34][#H] #[fg=black] '
set -g status-left-length 20
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load 1) #[fg=colour1]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") up #[fg=colour34,bg=default]%H:%M:%S %a#[default] #[fg=colour12]%Y-%m-%d'
set -g status-right-length 140

# Start numbering at 1
set -g base-index 1

###
# binding
######
set -g prefix C-a

# Allows us to use C-a a <command> to send commands to a TMUX session inside another TMUX session
bind C-a send-prefix

# Vi copypaste mode
setw -g mode-keys vi
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-k send-keys -R \; clear-history # bare C-k is used in vim to type digraph

# set window split
bind v split-window -h
bind b split-window

bind C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

###
# misc
######
# color
#set -g default-terminal "xterm"
#set -g default-terminal "screen-256color"
set -g default-terminal $TERM_SCREEN

# UTF-8
set -g status-utf8 on
setw -g utf8 on

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# auto window rename
setw -g automatic-rename

# mouse mode in (and after) 2.1
set -g mouse on
# mouse mode before 2.1
#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# check for OS X, source ``$HOME/.tmux-osx.conf``
#if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux-osx.conf'

###
# plugins (prefix + I to load plugins)
######
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' # key binding: C-s (save), C-r (restore)

###
# Powerline
######
# pip install --user git+git://github.com/Lokaltog/powerline
#if-shell 'test -f ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf' 'source-file ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf'

# [sudo] pip install git+git://github.com/Lokaltog/powerline
#if-shell 'test -f /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python2.7/dist-packages/powerline/bindings/tmux/powerline.conf'
# using python3.3
#if-shell 'test -f /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.3/dist-packages/powerline/bindings/tmux/powerline.conf'
# python 3.4?
# if-shell 'test -f /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf' 'source-file /usr/local/lib/python3.4/dist-packages/powerline/bindings/tmux/powerline.conf'

###
# post hook
######
run '~/.tmux/plugins/tpm/tpm' # this line must be the last line
