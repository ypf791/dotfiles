#!/bin/bash

thisBin="${BASH_SOURCE[0]}"

export _oo_VERBOSE

VerboseLog()
{
	if [ -n "$_oo_VERBOSE" ]; then
		for log in "$@"; do
			echo "$log" >&2
		done
		echo >&2
	fi
}

Link()
{
	VerboseLog "Linking $1" "     => $2"
	ln "$1" "$2"
}

Copy()
{
	VerboseLog "Copying $1" "     => $2"
	cp "$1" "$2"
}

HardLinkOrCopy()
{
	local src="$1"; shift
	local dst="$1"; shift

	mkdir -p ${_oo_VERBOSE:+-v} "$(dirname "$dst")"
	Link "$src" "$dst" || Copy "$src" "$dst"
}

Collect()
{
	{
	VerboseLog "[collect ($BASE)]" "Args: $*"

	local tempDirDiff="$1"; shift
	local lhs="$1"; shift
	local rhs="$1"; shift

	if [ "$lhs" != "$BASE" ] && [ "$lhs" != "/dev/null" ]; then
		HardLinkOrCopy "$lhs" "$tempDirDiff/lhs/$BASE"
		lhs="$tempDirDiff/lhs/$BASE"
	fi
	if [ "$rhs" != "$BASE" ] && [ "$rhs" != "/dev/null" ]; then
		HardLinkOrCopy "$rhs" "$tempDirDiff/rhs/$BASE"
		rhs="$tempDirDiff/rhs/$BASE"
	fi
	} >&2

	echo "$BASE"
	echo "$lhs"
	echo "$rhs"
}

MakeTempDir()
{
	local tplPrefix="$1"; shift

	if [ "$(uname -s)" = Darwin ]; then
		mktemp -d -t "$tplPrefix"
	else
		mktemp -d --tmpdir -- "$tplPrefix.XXXXXXXX"
	fi
}

WithTempDir()
{
	local prefix="$1"; shift

	if [ "$2" != "_1" ]; then
		echo "Invalid command format (missing placeholder): $*"
		return 1
	fi
	if tempDir="$(MakeTempDir "$prefix")"; then
		local command="$1"; shift 2
		(
			"$command" "$tempDir" "$@"
			exit $?
		)
		ret=$?
		rm -rf "$tempDir"
		return "$ret"
	else
		echo "Failed to make temporary directory"
		return 1
	fi
}

CreateVimRC()
{
	echo "au! BufEnter *"
	while IFS= read -r base; do
		IFS= read -r lhs
		IFS= read -r rhs
		echo "tabe $rhs"
		echo "vert diffsplit $lhs"
		echo 'if exists(":TabooRename")'
		echo "	TabooRename $base"
		echo 'endif'
	done
	echo "tabfirst"
	echo "tabclose"
}

Main()
{
	local tempDir="$1"; shift

	local tempDirDiff="$tempDir/diff"
	local tempDirVimRC="$tempDir/vimrc"

	VerboseLog "invoking 'git difftool --no-prompt'"

	gdfCmd=( git difftool -y -x "'$thisBin' -c '$tempDirDiff'" "$@" )
	VerboseLog "[gdfCmd]" "${gdfCmd[*]}"

	gdfCmdResult="$("${gdfCmd[@]}")"
	VerboseLog "[gdfCmdResult]" "$gdfCmdResult"

	if [ -z "$gdfCmdResult" ]; then
		echo "No difference found !"
		return 0
	fi

	echo "$gdfCmdResult" | CreateVimRC > "$tempDirVimRC"
	VerboseLog "[vimrc ($tempDirVimRC)]" "$(cat "$tempDirVimRC")"

	if [ -z "$_oo_DRYRUN" ]; then
		vim -S "$tempDirVimRC"
	fi
}

if [ "-c" = "$1" ]; then
	shift
	Collect "$@"
	exit $?
fi

if [ "-n" = "$1" ]; then
	if [ "$2" -eq "$2" ]; then
		set -- "@~$2" "@~$(($2 - 1))"
	else
		exit $?
	fi
fi

if gitRoot="$(git rev-parse --show-cdup)"; then
	cd "${gitRoot:-.}" || exit 1
else
	exit $?
fi

WithTempDir "gdf" Main _1 "$@"
