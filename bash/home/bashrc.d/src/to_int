#!/bin/bash

ScriptPath=`unset CDPATH && cd "$(dirname ${BASH_SOURCE[0]})" >/dev/null && pwd`
. ${ScriptPath}/bookmark

_gen_wordlist() {
	tag_list="$(_oo_bm_enum_tag)"
	for arg in $@; do
		if echo -n "${tag_list}" | grep -xq -- "${arg}" 2>/dev/null; then
			export ${NAME}="${arg}"
			tag_list=
			break
		fi
	done

	echo "declare ${NAME}=\"${!NAME}\"; export \"${NAME}\""
	if [ "${tag_list}" ]; then
		echo "wordlist=\"\${wordlist} ${tag_list}\""
	fi
}

if [ "--complete" = "${1}" ]; then
	eval "$(_oo_bm_foreach_tags _gen_wordlist "${2}")" >&2
	echo ${wordlist} $(_oo_bm_enum_bookmarks)
	exit $?
fi

_show_help() {
	cat >&2 << EOF
USAGE: to [-h] [back_pattern|tags...]
$(_oo_bm_foreach_exported_tags 'eval' 'echo "  ${NAME}:" $(_oo_bm_enum_tag)')
  bookmark: $(_oo_bm_enum_bookmarks_wrt_exported_tags)
EOF
}

OPTIND= OPTARG= opt=
while getopts "h" opt; do
	case ${opt} in
	h)	_show_help; exit
		;;
	?)	_show_help; exit 1
		;;
	esac
done

shift $((OPTIND-1))

_compute_tag_value() {
	for arg in "$@"; do
		if echo -n "$(_oo_bm_enum_tag)" | grep -xq -- "${arg}" 2>/dev/null; then
			export ${NAME}="${arg}"
			echo -e "declare matched=\"\${matched}\n${arg}\""
			break
		fi
	done
	echo "declare ${NAME}=\"${!NAME}\"; export \"${NAME}\""
}

eval "$(_oo_bm_foreach_tags _compute_tag_value "$@")"
residue=$(comm -23 <(printf "%s\n" "$@" | sort -u) <(echo -n "${matched}" | sort -u))

if [ 1 -lt $(echo ${residue} | wc -w) ]; then
	echo "to: too many residual patterns" >&2
	echo "    residues: ["${residue}"]" >&2
	exit 1
fi

_construct_path() {
	eval "$(echo "${ITEMS}" | jq -r '.|to_entries[]|@text "
		if [ \"\(.key)\" = \"${residue}\" ]; then
			echo -n \"to      \" >&2
			echo ${PREFIX}\(.value) | tee >(tee >&2)
			exit 0
		fi
	"' -)"
	return 0
}

_oo_bm_foreach_bookmarks _construct_path ${residue}

echo "to: no valid bookmarks found; try to match back pattern" >&2

if [ 1 -eq $# ]; then
	dir=$(pwd)
	while [ "/" != "${dir}" ]; do
		dir=$(dirname ${dir})
		base=$(basename ${dir})
		if echo "${base}" | grep -q -- "^${1}" 2>/dev/null; then
			echo "back to ${dir}" >&2
			echo ${dir}
			exit 0
		fi
	done
fi

echo "to: no valid back patterns found" >&2
exit 2

