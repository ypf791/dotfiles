#!/bin/bash

ScriptPath=`unset CDPATH && cd "$(dirname ${BASH_SOURCE[0]})" >/dev/null && pwd`
. ${ScriptPath}/bookmark

_oo_to_gen_wordlist() {
	tag_list=$(/bin/ls -Ad ${PREFIX}*/ 2>/dev/null | sed "s,^${PREFIX},," | sed "s,/$,,")
	
	for arg in ${comp_line}; do
		if printf "%s" "${tag_list}" | grep -wq -- "${arg}"; then
			export ${NAME}="${arg}"
			return
		fi
	done

	wordlist="${wordlist} ${tag_list}"
	echo "wordlist=\"${wordlist}\""
	echo "declare ${NAME}=\"${!NAME}\"; export \"${NAME}\""
}

if [ "--complete" = "${1}" ]; then
	comp_line="${2}"
	eval "$(_oo_bm_foreach_tag_obj _oo_to_gen_wordlist)"
	echo ${wordlist}
	exit $?
fi

_show_help() {
	cat >&2 << EOF
USAGE: to [-h] [tag...]
TAGS
$(_oo_bm_foreach_tag_obj _oo_bm_enum_tag)
$(_oo_bm_enum_bookmark)
EOF
}

OPTIND= OPTARG= opt=
while getopts "h" opt; do
	case ${opt} in
	h)	_show_help; exit
		;;
	?)	_show_help; exit 1
		;;
	esac
done

shift $((OPTIND-1))

if [ -z "$1" ]; then
	echo "to: must specify back pattern" >&2
	exit 1
fi

pattern=$1
dir=`pwd`
while [ "/" != "$dir" ]; do
	dir=`dirname $dir`
	base=`basename $dir`
	if echo "$base" | grep -q -- "^$pattern" >/dev/null 2>&1; then
		echo "back to ${dir}" >&2
		echo ${dir}
		exit 0
	fi
done

echo "to: not available back pattern" >&2
exit 2
