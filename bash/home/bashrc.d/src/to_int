#!/bin/bash

ScriptPath=`unset CDPATH && cd "$(dirname ${BASH_SOURCE[0]})" >/dev/null && pwd`
. ${ScriptPath}/bookmark

_gen_wordlist() {
	if ! eval ${CONDITION}; then
		return
	fi

	tag_list="$(_oo_bm_enum_tag)"
	for arg in ${comp_line}; do
		if echo -n "${tag_list}" | grep -xq -- "${arg}" 2>/dev/null; then
			export ${NAME}="${arg}"
			tag_list=
			break
		fi
	done

	echo "declare ${NAME}=\"${!NAME}\"; export \"${NAME}\""
	if [ "${tag_list}" ]; then
		echo "wordlist=\"\${wordlist} ${tag_list}\""
	fi
}

if [ "--complete" = "${1}" ]; then
	comp_line="${2}"
	eval "$(_oo_bm_foreach_tags _gen_wordlist)" >&2
	echo ${wordlist} $(_oo_bm_enum_bookmarks)
	exit $?
fi

_show_help() {
	cat >&2 << EOF
USAGE: to [-h] [back_pattern|tags...]
$(_oo_bm_foreach_exported_tags 'eval' 'echo "  ${NAME}:" $(_oo_bm_enum_tag)')
  bookmark: $(_oo_bm_enum_bookmarks_wrt_exported_tags)
EOF
}

OPTIND= OPTARG= opt=
while getopts "h" opt; do
	case ${opt} in
	h)	_show_help; exit
		;;
	?)	_show_help; exit 1
		;;
	esac
done

shift $((OPTIND-1))

_compute_tag_value() {
	if ! eval ${CONDITION}; then
		return
	fi

	for arg in "$@"; do
		if echo -n "$(_oo_bm_enum_tag)" | grep -xq -- "${arg}" 2>/dev/null; then
			export ${NAME}="${arg}"
			break
		fi
	done

	echo "declare ${NAME}=\"${!NAME}\"; export \"${NAME}\""
}

eval "$(_oo_bm_foreach_tags _compute_tag_value "$@")" >&2
echo "[${branch}, ${platform}, ${project}, ${package}, ${bookmark}]" >&2

_construct_path() {
	if ! eval ${CONDITION}; then
		return 1
	fi
}

eval "$(_oo_bm_foreach_bookmarks 'test' '! _construct_path')"

pattern=${1}
if [ -z "${pattern}" ]; then
	echo "to: must specify back pattern" >&2
	exit 1
fi

dir=$(pwd)
while [ "/" != "${dir}" ]; do
	dir=$(dirname ${dir})
	base=$(basename ${dir})
	if echo "${base}" | grep -q -- "^${pattern}" 2>/dev/null; then
		echo "back to ${dir}" >&2
		echo ${dir}
		exit 0
	fi
done

echo "to: not available back pattern" >&2
exit 2
