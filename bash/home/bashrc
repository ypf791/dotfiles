#!/bin/bash
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color|*-256color)
	color_prompt=yes
	;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

# override PS1 before its being typed
__oo_prompt_cmd() {
	local RET=$?

	local PS1_CHROOT='${debian_chroot:+($debian_chroot)}'
	local PS1_USERHOST='[\u@\h \A]'
	local PS1_RET='[$(printf "%2x" $RET)]'
	local PS1_PATH='[\w]'
	local PS1_BRANCH="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"

	local C_USERHOST='\[\e[0;36m\]'
	local C_RET='\[\e[93m\]'
	local C_PATH='\[\e[1;34m\]'
	local C_BRANCH='\[\e[1;30m\]'
	local C_DEFAULT='\[\e[0m\]'

	[ $RET -eq 0 ] || C_RET='\[\e[91m\]'

	PS1="\n${PS1_CHROOT}${C_USERHOST}${PS1_USERHOST}${C_RET}${PS1_RET}${C_PATH}${PS1_PATH}${C_BRANCH}${PS1_BRANCH:+[${PS1_BRANCH}]}${C_DEFAULT}\n\$ "
}

if [ "$color_prompt" = yes ]; then
	PROMPT_COMMAND=__oo_prompt_cmd
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	#alias dir='dir --color=auto'
	#alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
	. ~/.bash_aliases
fi

# User-defined scripts
if [ -d ~/.bashrc.d ]; then
	for f in `ls ~/.bashrc.d`; do
		[ -f ~/.bashrc.d/$f ] && . ~/.bashrc.d/$f
	done
fi

# export locale for date format
export LC_TIME=en_US.UTF-8
